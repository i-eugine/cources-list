---
root: true

env:
  browser: true
  es2021: true

parser: '@typescript-eslint/parser'

plugins:
  - '@typescript-eslint'
  - prettier
  - unused-imports
  - perfectionist

extends:
  - eslint:recommended
  - 'plugin:@typescript-eslint/eslint-recommended'
  - 'plugin:@typescript-eslint/recommended'
  - prettier

rules:
  prettier/prettier:
    - error
    -
      printWidth: 100
      trailingComma: es5
      semi: true
      jsxSingleQuote: true
      singleQuote: true
      useTabs: false
      endOfLine: auto
      max-len: [error, { code: 100 }]

  perfectionist/sort-imports:
    - error
    -
      groups:
        - [react, external]
        - aliases
        - internal
      newlines-between: always
      custom-groups:
        value:
          react: [react, 'react-*']
          aliases: [
            '@api', '@components', '@helpers', '@models', '@routing', '@store',
            '@components/**', '@pages/**', '@styles/**', '@store/**'
          ]

  perfectionist/sort-jsx-props:
    - error
    -
      groups: [key, multiline, unknown, shorthand, callback]
      custom-groups: { callback: 'on*', key: key}

  perfectionist/sort-enums: error

  '@typescript-eslint/no-namespace': off
  no-duplicate-imports: error
  no-unused-vars: off
  unused-imports/no-unused-imports: error

  unused-imports/no-unused-vars:
    - warn
    - 
      vars: all
      varsIgnorePattern: '^_'
      args: after-used
      argsIgnorePattern: '^_'

  no-restricted-imports:
    - error
    -
      paths:
        -
          name: react-redux
          importNames: [useSelector]
          message: Please, import useAppSelector instead
        -
          name: react-redux
          importNames: [useDispatch]
          message: Please, import useAppDispatch instead

  no-debugger: warn
